<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Advanced Portfolio</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&family=Roboto+Mono:wght@400;700&display=swap');

        :root {
            --neon-green: #00ff9d;
            --dark-green: #004d2e;
            --neon-red: #ff0044;
            --background: #000813;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            cursor: none;
        }

        body {
            font-family: 'Roboto Mono', monospace;
            background: var(--background);
            color: #fff;
            overflow-x: hidden;
            line-height: 1.6;
        }

        #cursor {
            width: 20px;
            height: 20px;
            background: var(--neon-green);
            border-radius: 50%;
            position: fixed;
            pointer-events: none;
            z-index: 9999;
            transform: translate(-50%, -50%);
            transition: all 0.3s ease;
            mix-blend-mode: screen;
            box-shadow: 0 0 20px var(--neon-green);
        }

        #cursor.expanded {
            width: 50px;
            height: 50px;
            background: var(--neon-red);
            box-shadow: 0 0 40px var(--neon-red);
        }

        #grid-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: 
                linear-gradient(transparent 95%, rgba(0, 255, 157, 0.1) 100%),
                linear-gradient(90deg, transparent 95%, rgba(0, 255, 157, 0.1) 100%);
            background-size: 50px 50px;
            pointer-events: none;
            z-index: -1;
        }

        nav {
            position: fixed;
            width: 100%;
            padding: 1rem;
            background: rgba(0, 8, 19, 0.9);
            backdrop-filter: blur(10px);
            z-index: 1000;
            border-bottom: 1px solid var(--neon-green);
        }

        .nav-links {
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            justify-content: center;
            gap: 2rem;
        }

        .nav-links a {
            color: #fff;
            text-decoration: none;
            font-family: 'Orbitron', sans-serif;
            text-transform: uppercase;
            letter-spacing: 2px;
            position: relative;
            padding: 0.5rem 1rem;
        }

        .nav-links a::before {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 2px;
            background: var(--neon-green);
            transition: width 0.3s ease;
        }

        .nav-links a:hover::before {
            width: 100%;
        }

        section {
            min-height: 100vh;
            padding: 6rem 2rem;
            position: relative;
            overflow: hidden;
        }

        .hero {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            position: relative;
        }

        .hero h1 {
            font-family: 'Orbitron', sans-serif;
            font-size: 4rem;
            margin-bottom: 1rem;
            animation: glitch 5s infinite;
            text-shadow: 0 0 10px var(--neon-green);
        }

        .hero p {
            font-size: 1.2rem;
            max-width: 800px;
            margin: 0 auto;
            color: var(--neon-green);
        }

        .section-title {
            font-family: 'Orbitron', sans-serif;
            font-size: 2.5rem;
            margin-bottom: 2rem;
            text-align: center;
            color: var(--neon-green);
            text-transform: uppercase;
        }

        .skill-grid, .project-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }

        .skill-card, .project-card {
            background: rgba(0, 255, 157, 0.1);
            border: 1px solid var(--neon-green);
            padding: 2rem;
            border-radius: 10px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .skill-card:hover, .project-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 0 20px var(--neon-green);
        }

        .contact-form {
            max-width: 600px;
            margin: 0 auto;
        }

        .contact-form input,
        .contact-form textarea {
            width: 100%;
            padding: 1rem;
            margin-bottom: 1rem;
            background: rgba(0, 255, 157, 0.1);
            border: 1px solid var(--neon-green);
            border-radius: 5px;
            color: #fff;
            font-family: 'Roboto Mono', monospace;
        }

        .contact-form button {
            padding: 1rem 2rem;
            background: var(--neon-green);
            border: none;
            border-radius: 5px;
            color: var(--background);
            font-family: 'Orbitron', sans-serif;
            text-transform: uppercase;
            letter-spacing: 2px;
            transition: all 0.3s ease;
        }

        .contact-form button:hover {
            background: var(--dark-green);
            color: var(--neon-green);
            box-shadow: 0 0 20px var(--neon-green);
        }

        @keyframes glitch {
            0% { transform: translate(0); }
            1% { transform: translate(-2px, 2px); }
            2% { transform: translate(2px, -2px); }
            3% { transform: translate(0); }
            100% { transform: translate(0); }
        }

        .section-content {
            max-width: 800px;
            margin: 0 auto;
            background: rgba(0, 8, 19, 0.8);
            padding: 2rem;
            border-radius: 10px;
            border: 1px solid var(--neon-green);
        }

        ul {
            list-style: none;
            padding: 0;
        }

        ul li {
            padding: 0.5rem 0;
            position: relative;
            padding-left: 1.5rem;
        }

        ul li::before {
            content: '>';
            color: var(--neon-green);
            position: absolute;
            left: 0;
        }

        @media (max-width: 768px) {
            .nav-links {
                flex-direction: column;
                align-items: center;
            }

            .hero h1 {
                font-size: 2.5rem;
            }

            section {
                padding: 4rem 1rem;
            }
        }
    </style>
</head>
<body>
    <div id="cursor"></div>
    <div id="grid-overlay"></div>

    <nav>
        <div class="nav-links">
            <a href="#home">Home</a>
            <a href="#about">About</a>
            <a href="#skills">Skills</a>
            <a href="#projects">Projects</a>
            <a href="#contact">Contact</a>
        </div>
    </nav>

    <section id="home" class="hero">
        <h1>Welcome to My Portfolio</h1>
        <p>Frontend Developer & UI Designer | Computer Science Student at Indian Institute of Technology Patna</p>
    </section>

    <section id="about">
        <h2 class="section-title">About Me</h2>
        <div class="section-content">
            <p>I'm a passionate computer science student at IIT Patna, where I'm building a solid foundation in programming, data analysis, and machine learning. With hands-on experience in Python, Java, and web development (HTML, CSS, JavaScript), I'm eager to create innovative tech solutions. I thrive on challenges, especially those that require critical thinking and problem-solving, and I'm actively preparing to clear FAANG interviews and pursue a career as a Software Development Engineer.</p>
        </div>
    </section>

    <section id="skills">
        <h2 class="section-title">Skills</h2>
        <div class="skill-grid">
            <div class="skill-card">
                <h3>Frontend</h3>
                <ul>
                    <li>HTML</li>
                    <li>CSS</li>
                    <li>JavaScript</li>
                </ul>
            </div>
            <div class="skill-card">
                <h3>Backend</h3>
                <ul>
                    <li>Python</li>
                    <li>Java</li>
                    <li>SQL</li>
                </ul>
            </div>
            <div class="skill-card">
                <h3>Tools</h3>
                <ul>
                    <li>Git</li>
                    <li>VS Code</li>
                    <li>Docker</li>
                </ul>
            </div>
        </div>
    </section>

    <section id="projects">
        <h2 class="section-title">Projects</h2>
        <div class="project-grid">
            <div class="project-card">
                <h3>Project 1</h3>
                <p>A beautiful web application built with modern technologies.</p>
            </div>
            <div class="project-card">
                <h3>Project 2</h3>
                <p>An innovative mobile-first design approach.</p>
            </div>
            <div class="project-card">
                <h3>Project 3</h3>
                <p>Interactive user experience with smooth animations.</p>
            </div>
        </div>
    </section>

    <section id="contact">
        <h2 class="section-title">Contact Me</h2>
        <form class="contact-form">
            <input type="text" placeholder="Name" required>
            <input type="email" placeholder="Email" required>
            <textarea placeholder="Message" rows="5" required></textarea>
            <button type="submit">Send Message</button>
        </form>
    </section>
<script>
    const cursor = document.getElementById('cursor');
    let cursorX = 0, cursorY = 0, targetX = 0, targetY = 0;
    const smoothFactor = 0.15; // Adjust for smoother movement

    document.addEventListener('mousemove', (e) => {
        targetX = e.clientX;
        targetY = e.clientY;
    });

    function lerp(start, end, factor) {
        return start + (end - start) * factor;
    }

    function updateCursorPosition() {
        cursorX = lerp(cursorX, targetX, smoothFactor);
        cursorY = lerp(cursorY, targetY, smoothFactor);
        cursor.style.transform = `translate3d(${cursorX}px, ${cursorY}px, 0) translate(-50%, -50%)`;
        requestAnimationFrame(updateCursorPosition);
    }

    updateCursorPosition();

    // Cursor hover effect
    document.querySelectorAll('a, button, .project-card, .skill-card, input, textarea').forEach(element => {
        element.addEventListener('mouseenter', () => {
            cursor.classList.add('expanded');
        });
        element.addEventListener('mouseleave', () => {
            cursor.classList.remove('expanded');
        });
    });

    // Smooth scroll
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            document.querySelector(this.getAttribute('href')).scrollIntoView({
                behavior: 'smooth'
            });
        });
    });

    // Intersection Observer for fade-in effect
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, { threshold: 0.1 });

    document.querySelectorAll('section').forEach(section => {
        section.style.opacity = '0';
        section.style.transform = 'translateY(50px)';
        section.style.transition = 'all 0.6s ease-out';
        observer.observe(section);
    });

    // Parallax effect
    window.addEventListener('scroll', () => {
        document.querySelectorAll('section').forEach(section => {
            const scroll = window.pageYOffset;
            const sectionTop = section.offsetTop;
            const sectionHeight = section.offsetHeight;
            if (scroll > sectionTop - window.innerHeight / 2 && scroll < sectionTop + sectionHeight) {
                section.style.opacity = 1;
                section.style.transform = 'translateY(0)';
            }
        });
    });
</script>

</body>
</html>
